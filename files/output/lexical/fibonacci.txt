fibonacci(int limit) empty {
              [0000, 0000] (0002,        tID) {fibonacci}
              [0000, 0009] (0012,        tOP) {(}
              [0000, 0010] (0004,       tINT) {int}
              [0000, 0014] (0002,        tID) {limit}
              [0000, 0019] (0013,        tCP) {)}
              [0000, 0021] (0003,     tEMPTY) {empty}
              [0000, 0027] (0010,        tOK) {{}
	int count;
              [0001, 0001] (0004,       tINT) {int}
              [0001, 0005] (0002,        tID) {count}
              [0001, 0010] (0017,       tSCO) {;}
	int fib1;
              [0002, 0001] (0004,       tINT) {int}
              [0002, 0005] (0002,        tID) {fib1}
              [0002, 0009] (0017,       tSCO) {;}
	int fib2;
              [0003, 0001] (0004,       tINT) {int}
              [0003, 0005] (0002,        tID) {fib2}
              [0003, 0009] (0017,       tSCO) {;}
	int fib3;
              [0004, 0001] (0004,       tINT) {int}
              [0004, 0005] (0002,        tID) {fib3}
              [0004, 0009] (0017,       tSCO) {;}
	
	fib1 = 1;
              [0006, 0001] (0002,        tID) {fib1}
              [0006, 0006] (0043,       tATR) {=}
              [0006, 0008] (0020,    tCTEINT) {1}
              [0006, 0009] (0017,       tSCO) {;}
	fib2 = 1;
              [0007, 0001] (0002,        tID) {fib2}
              [0007, 0006] (0043,       tATR) {=}
              [0007, 0008] (0020,    tCTEINT) {1}
              [0007, 0009] (0017,       tSCO) {;}
	
	if(limit == 0) {
              [0009, 0001] (0025,        tIF) {if}
              [0009, 0003] (0012,        tOP) {(}
              [0009, 0004] (0002,        tID) {limit}
              [0009, 0010] (0042,       tORE) {==}
              [0009, 0013] (0020,    tCTEINT) {0}
              [0009, 0014] (0013,        tCP) {)}
              [0009, 0016] (0010,        tOK) {{}
		show("0");
              [0010, 0002] (0031,      tSHOW) {show}
              [0010, 0006] (0012,        tOP) {(}
              [0010, 0007] (0024, tCTESTRING) {"0"}
              [0010, 0010] (0013,        tCP) {)}
              [0010, 0011] (0017,       tSCO) {;}
	};
              [0011, 0001] (0011,        tCK) {}}
              [0011, 0002] (0017,       tSCO) {;}
	
	when(count < limit) {
              [0013, 0001] (0030,      tWHEN) {when}
              [0013, 0005] (0012,        tOP) {(}
              [0013, 0006] (0002,        tID) {count}
              [0013, 0012] (0041,       tORC) {<}
              [0013, 0014] (0002,        tID) {limit}
              [0013, 0019] (0013,        tCP) {)}
              [0013, 0021] (0010,        tOK) {{}
		if(count < 2) {
              [0014, 0002] (0025,        tIF) {if}
              [0014, 0004] (0012,        tOP) {(}
              [0014, 0005] (0002,        tID) {count}
              [0014, 0011] (0041,       tORC) {<}
              [0014, 0013] (0020,    tCTEINT) {2}
              [0014, 0014] (0013,        tCP) {)}
              [0014, 0016] (0010,        tOK) {{}
			show("1, ");
              [0015, 0003] (0031,      tSHOW) {show}
              [0015, 0007] (0012,        tOP) {(}
              [0015, 0008] (0024, tCTESTRING) {"1, "}
              [0015, 0013] (0013,        tCP) {)}
              [0015, 0014] (0017,       tSCO) {;}
		} else {
              [0016, 0002] (0011,        tCK) {}}
              [0016, 0004] (0026,      tELSE) {else}
              [0016, 0009] (0010,        tOK) {{}
			fib3 = fib1 + fib2;
              [0017, 0003] (0002,        tID) {fib3}
              [0017, 0008] (0043,       tATR) {=}
              [0017, 0010] (0002,        tID) {fib1}
              [0017, 0015] (0037,       tOPA) {+}
              [0017, 0017] (0002,        tID) {fib2}
              [0017, 0021] (0017,       tSCO) {;}
			fib1 = fib2;
              [0018, 0003] (0002,        tID) {fib1}
              [0018, 0008] (0043,       tATR) {=}
              [0018, 0010] (0002,        tID) {fib2}
              [0018, 0014] (0017,       tSCO) {;}
			fib2 = fib3;
              [0019, 0003] (0002,        tID) {fib2}
              [0019, 0008] (0043,       tATR) {=}
              [0019, 0010] (0002,        tID) {fib3}
              [0019, 0014] (0017,       tSCO) {;}
			show(fib3 ++ ", ");
              [0020, 0003] (0031,      tSHOW) {show}
              [0020, 0007] (0012,        tOP) {(}
              [0020, 0008] (0002,        tID) {fib3}
              [0020, 0013] (0044,    tCONCAT) {++}
              [0020, 0016] (0024, tCTESTRING) {", "}
              [0020, 0020] (0013,        tCP) {)}
              [0020, 0021] (0017,       tSCO) {;}
		};
              [0021, 0002] (0011,        tCK) {}}
              [0021, 0003] (0017,       tSCO) {;}
		count = count + 1;
              [0022, 0002] (0002,        tID) {count}
              [0022, 0008] (0043,       tATR) {=}
              [0022, 0010] (0002,        tID) {count}
              [0022, 0016] (0037,       tOPA) {+}
              [0022, 0018] (0020,    tCTEINT) {1}
              [0022, 0019] (0017,       tSCO) {;}
	};
              [0023, 0001] (0011,        tCK) {}}
              [0023, 0002] (0017,       tSCO) {;}
};
              [0024, 0000] (0011,        tCK) {}}
              [0024, 0001] (0017,       tSCO) {;}

main() empty {
              [0026, 0000] (0001,      tMAIN) {main}
              [0026, 0004] (0012,        tOP) {(}
              [0026, 0005] (0013,        tCP) {)}
              [0026, 0007] (0003,     tEMPTY) {empty}
              [0026, 0013] (0010,        tOK) {{}
	int limit;
              [0027, 0001] (0004,       tINT) {int}
              [0027, 0005] (0002,        tID) {limit}
              [0027, 0010] (0017,       tSCO) {;}
	read(limit);
              [0028, 0001] (0032,      tREAD) {read}
              [0028, 0005] (0012,        tOP) {(}
              [0028, 0006] (0002,        tID) {limit}
              [0028, 0011] (0013,        tCP) {)}
              [0028, 0012] (0017,       tSCO) {;}
	fibonacci(limit);
              [0029, 0001] (0002,        tID) {fibonacci}
              [0029, 0010] (0012,        tOP) {(}
              [0029, 0011] (0002,        tID) {limit}
              [0029, 0016] (0013,        tCP) {)}
              [0029, 0017] (0017,       tSCO) {;}
};
              [0030, 0000] (0011,        tCK) {}}
              [0030, 0001] (0017,       tSCO) {;}
